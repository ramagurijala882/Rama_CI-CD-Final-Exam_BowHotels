name: Deploy Dynamic Website to EC2 and S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Step 3: Deploy Static Assets to S3
    - name: Deploy Static Assets to S3
      run: |
        echo "Deploying static assets to S3..."
        aws s3 sync ./ s3://ramafinalexam3403 --delete
        echo "Static assets deployed to S3 successfully."

    # Step 4: Create Private Key File from Secret
    - name: Create Private Key File
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2-key.pem
        chmod 400 ec2-key.pem

    # Step 5: Debug EC2 Public IP
    - name: Debug EC2 Public IP
      run: |
        echo "EC2 Public IP: ${{ secrets.EC2_PUBLIC_IP }}"

    # Step 6: Copy Backend Code to EC2 Instance
    - name: Copy Backend Code to EC2
      run: |
        echo "Copying backend files to EC2 instance..."
        scp -v -o StrictHostKeyChecking=no -i ec2-key.pem -r ./backend ec2-user@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/
        echo "Backend files copied successfully."

    # Step 7: Deploy Backend to EC2
    - name: Deploy Backend on EC2
      run: |
        echo "Deploying backend on EC2 instance..."
        ssh -vvv -o StrictHostKeyChecking=no -i ec2-key.pem ec2-user@${{ secrets.EC2_PUBLIC_IP }} << EOF
          sudo yum update -y
          sudo yum install -y httpd php php-cli php-mysqlnd
          sudo systemctl start httpd
          sudo systemctl enable httpd
          cd /var/www/html
          sudo rm -rf *
          sudo cp -r /home/ec2-user/backend/* .
          sudo chmod -R 755 /var/www/html
          echo "Dynamic website backend deployed successfully on EC2."
        EOF
